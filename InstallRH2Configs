local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")

-- Define the desired walk speeds
local speeds = {
    normal = 11,
    shift = 13.5,
    gInPost = 9,
    gNotInPost = 11.5,
    f = 4.3
}

-- Variable to prevent re-entry loop
local adjustingSpeed = false

-- Function to get the InPost value
local function isInPost()
    local inPost = player:WaitForChild("Backpack"):WaitForChild("PlayerValues"):WaitForChild("InPost")
    return inPost.Value
end

-- Function to adjust the humanoid's walk speed
local function adjustSpeed(humanoid)
    if adjustingSpeed then return end
    adjustingSpeed = true

    local keyStates = {
        g = userInputService:IsKeyDown(Enum.KeyCode.G),
        f = userInputService:IsKeyDown(Enum.KeyCode.F),
        shift = userInputService:IsKeyDown(Enum.KeyCode.LeftShift)
    }

    if keyStates.g then
        humanoid.WalkSpeed = isInPost() and speeds.gInPost or speeds.gNotInPost
    elseif keyStates.f then
        humanoid.WalkSpeed = speeds.f
    elseif keyStates.shift then
        humanoid.WalkSpeed = speeds.shift
    else
        humanoid.WalkSpeed = speeds.normal
    end
    
    adjustingSpeed = false
end

-- Handles the character being added to the game
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    adjustSpeed(humanoid)

    -- Keep adjusting the speed when it changes externally
    humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if not adjustingSpeed then
            adjustSpeed(humanoid)
        end
    end)

    -- Continuously enforce the walk speed
    while true do
        wait(0.1)  -- Adjust the frequency as needed
        adjustSpeed(humanoid)
    end
end

-- Connect to the character added signal
player.CharacterAdded:Connect(onCharacterAdded)

-- Ensure we handle the current character if it already exists
if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
    onCharacterAdded(player.Character)
end

-- Listen for input changes to adjust speed immediately
local function onInputChanged(input, gameProcessedEvent)
    if not gameProcessedEvent and (input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.G or input.KeyCode == Enum.KeyCode.F) then
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            adjustSpeed(humanoid)
        end
    end
end

userInputService.InputBegan:Connect(onInputChanged)
userInputService.InputEnded:Connect(onInputChanged)
